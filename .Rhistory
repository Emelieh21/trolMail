html_nodes("td:nth-child(2)") %>%
html_text()
dat$date <- dates
country <- page_html %>%
html_nodes("td:nth-child(3)") %>%
html_text()
dat$country <- country
city <- page_html %>%
html_nodes("td:nth-child(4)") %>%
html_text()
dat$city <- city
perpetrator <- page_html %>%
html_nodes("td:nth-child(5)") %>%
html_text()
dat$perpetrator <- perpetrator
fatalities <- page_html %>%
html_nodes("td:nth-child(6)") %>%
html_text()
dat$fatalities <- fatalities
injured <- page_html %>%
html_nodes("td:nth-child(7)") %>%
html_text()
dat$injured <- injured
target <- page_html %>%
html_nodes("td:nth-child(8)") %>%
html_text()
dat$target <- target
print(head(dat))
collect <- rbind(dat, collect)
}
rm(collect, dat)
for (i in c(1:37)){
page = as.character(i)
print(page)
page_site <- paste0("https://www.start.umd.edu/gtd/search/Results.aspx?expanded=no&casualties_type=b&casualties_max=&dtp2=all&success=yes&country=21%2C69%2C75%2C116%2C142&ob=GTDID&od=desc&page=",page,"&count=100") #results-table
remDr$navigate(page_site)
elem <- remDr$findElement(using="class", value="body-container-middle")
elem$highlightElement()
elemtxt <- elem$getElementAttribute("outerHTML")[[1]]
page_html <- read_html(elemtxt)
ids <- page_html %>%
html_nodes("td a") %>%
html_text()
dat <- as.data.frame(ids)
names(dat) <- "id"
dates <- page_html %>%
html_nodes("td:nth-child(2)") %>%
html_text()
dat$date <- dates
country <- page_html %>%
html_nodes("td:nth-child(3)") %>%
html_text()
dat$country <- country
city <- page_html %>%
html_nodes("td:nth-child(4)") %>%
html_text()
dat$city <- city
perpetrator <- page_html %>%
html_nodes("td:nth-child(5)") %>%
html_text()
dat$perpetrator <- perpetrator
fatalities <- page_html %>%
html_nodes("td:nth-child(6)") %>%
html_text()
dat$fatalities <- fatalities
injured <- page_html %>%
html_nodes("td:nth-child(7)") %>%
html_text()
dat$injured <- injured
target <- page_html %>%
html_nodes("td:nth-child(8)") %>%
html_text()
dat$target <- target
print(head(dat))
collect <- rbind(dat, collect)
}
collect = data.frame()
for (i in c(1:37)){
page = as.character(i)
print(page)
page_site <- paste0("https://www.start.umd.edu/gtd/search/Results.aspx?expanded=no&casualties_type=b&casualties_max=&dtp2=all&success=yes&country=21%2C69%2C75%2C116%2C142&ob=GTDID&od=desc&page=",page,"&count=100") #results-table
remDr$navigate(page_site)
elem <- remDr$findElement(using="class", value="body-container-middle")
elem$highlightElement()
elemtxt <- elem$getElementAttribute("outerHTML")[[1]]
page_html <- read_html(elemtxt)
ids <- page_html %>%
html_nodes("td a") %>%
html_text()
dat <- as.data.frame(ids)
names(dat) <- "id"
dates <- page_html %>%
html_nodes("td:nth-child(2)") %>%
html_text()
dat$date <- dates
country <- page_html %>%
html_nodes("td:nth-child(3)") %>%
html_text()
dat$country <- country
city <- page_html %>%
html_nodes("td:nth-child(4)") %>%
html_text()
dat$city <- city
perpetrator <- page_html %>%
html_nodes("td:nth-child(5)") %>%
html_text()
dat$perpetrator <- perpetrator
fatalities <- page_html %>%
html_nodes("td:nth-child(6)") %>%
html_text()
dat$fatalities <- fatalities
injured <- page_html %>%
html_nodes("td:nth-child(7)") %>%
html_text()
dat$injured <- injured
target <- page_html %>%
html_nodes("td:nth-child(8)") %>%
html_text()
dat$target <- target
print(head(dat))
collect <- rbind(dat, collect)
}
View(collect)
write.csv2(collect, "D:/Rfiles/GTD Data/GTD_Benelux_DE_FR.csv", row.names=FALSE)
unique(collect$perpetrator)
hist(collect$perpetrator)
hist(count(collect$perpetrator))
collect$count <- 1
num <- tapply(collect$count, collect$perpetrator, sum)
plot(num)
plot(num[1:10])
print(num[1:10])
perpetrators <- as.data.frame(nu)
perpetrators <- as.data.frame(num)
View(perpetrators)
View(collect)
collect_ordered <- collect[order(collect$date),]
View(collect_ordered)
collect_ordered <- collect[order(collect$date, decreasing = TRUE),]
View(collect_ordered)
collect_recent <- collect_ordersed[c(1:600),]
collect_recent <- collect_ordered[c(1:600),]
View(collect_recent)
unique(collect_recent$perpetrator)
num <- tapply(collect_recent$count, collect_recent$perpetrator, sum)
print(num[1:10])
perpetrators <- as.data.frame(num)
View(gtd_eu)
View(perpetrators)
View(collect_recent)
View(collect_ordered)
collect_ordered$fatalities[collect_ordered$fatalities=="Unknown"] <- NA
collect_ordered$fatalities <- as.numeric(collect_ordered$fatalities)
collect_ordered <- collect[order(collect$date, decreasing = TRUE),]
collect_ordered$fatalities <- as.numeric(collect_ordered$fatalities)
View(collect_recent)
collect_recent <- collect_ordered[c(1:600),]
unique(collect_recent$perpetrator)
num <- tapply(collect_recent$count, collect_recent$perpetrator, sum)
print(num[1:10])
perpetrators <- as.data.frame(num)
keep <- c("jihadi-inspired extremists", "Islamic State of Iraq and the Levant (ISIL)", "Al-Qaida in the Arabian Peninsula (AQAP)", "Muslim extremists", "Muslim extremists (suspected)", "Sunni Muslim extremists")
collect_jihad <- subset(collect_recent, perpetrators %in% keep)
collect_jihad <- subset(collect_recent, perpetrator %in% keep)
View(collect_jihad)
keep <- c("jihadi-inspired extremists", "Islamic State of Iraq and the Levant (ISIL)", "Al-Qaida in the Arabian Peninsula (AQAP)", "Muslim extremists", "Muslim extremists (suspected)", "Sunni Muslim extremists", "Unknown")
collect_jihad <- subset(collect_recent, perpetrator %in% keep)
View(collect_jihad)
i=1
sub <- collect_jihad[i,]
page_site <- paste0("https://www.start.umd.edu/gtd/search/IncidentSummary.aspx?gtdid=",sub$id)
remDr$navigate(page_site)
rD$server$stop()
rD <- rsDriver(verbose = FALSE)
remDr <- rD$client
remDr$navigate(page_site)
elem <- remDr$findElement(using="class", value="body-container-middle")
elem$highlightElement()
elemtxt <- elem$getElementAttribute("outerHTML")[[1]]
page_html <- read_html(elemtxt)
links <- page_html %>%
html_nodes(".inside") %>%
html_text(trim = TRUE)
links
full_info = data.frame()
for (i in c(1:nrow(collect_jihad))){
sub <- collect_jihad[i,]
page_site <- paste0("https://www.start.umd.edu/gtd/search/IncidentSummary.aspx?gtdid=",sub$id)
remDr$navigate(page_site)
print(sub)
elem <- remDr$findElement(using="class", value="body-container-middle")
elem$highlightElement()
elemtxt <- elem$getElementAttribute("outerHTML")[[1]]
page_html <- read_html(elemtxt)
links <- page_html %>%
html_nodes(".inside") %>%
html_text(trim = TRUE)
links
sub$description <-links
full_info <- rbind(full_info, sub)
}
View(full_info)
full_info = data.frame()
full_info = data.frame()
for (i in c(1:nrow(collect_jihad))){
sub <- collect_jihad[i,]
page_site <- paste0("https://www.start.umd.edu/gtd/search/IncidentSummary.aspx?gtdid=",sub$id)
remDr$navigate(page_site)
print(sub)
Sys.sleep(1)
elem <- remDr$findElement(using="class", value="body-container-middle")
elem$highlightElement()
elemtxt <- elem$getElementAttribute("outerHTML")[[1]]
page_html <- read_html(elemtxt)
links <- page_html %>%
html_nodes(".inside") %>%
html_text(trim = TRUE)
print(links)
sub$description <-links
full_info <- rbind(full_info, sub)
}
View(full_info)
write.csv2(full_info, "D:/Rfiles/GTD Data/GTD_descripted.csv", row.names=FALSE)
txt <- read.table(
"D:/Rfiles/GTD Data/verdachte_personen.txt",
sep="\t", header=TRUE)
View(txt)
txt <- txt[txt$datum.inwerkingtreding!="",]
write.csv2(txt, "D:/Rfiles/GTD Data/verdachte_personen.csv", row.names==FALSE)
write.csv2(txt, "D:/Rfiles/GTD Data/verdachte_personen.csv", row.names=FALSE)
dat <- read.csv("D:/Rfiles/170630_search_columes.csv", row.names=FALSE)
dat <- read.csv("D:/Rfiles/170630_search_columes.csv", stringsAsFactors = =FALSE)
dat <- read.csv("D:/Rfiles/170630_search_columes.csv", stringsAsFactors = FALSE)
data <- read.csv("D:/Rfiles/170630_search_columes.csv", stringsAsFactors = FALSE)
apply(data,2,function(x) sum(is.na(x)))
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train <- data[index,]
test <- data[-index,]
lm.fit <- glm(medv~., data=train)
data <- read.csv("D:/Rfiles/170630_search_columes.csv", stringsAsFactors = FALSE)
data <- data[,!names(data)=="sum_rides"]
apply(data,2,function(x) sum(is.na(x)))
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train <- data[index,]
test <- data[-index,]
lm.fit <- glm(sum_orders~., data=train)
summary(lm.fit)
data <- read.csv("D:/Rfiles/170630_search_columes.csv")
data <- data[,!names(data) %in% c("sum_rides","search")]
apply(data,2,function(x) sum(is.na(x)))
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train <- data[index,]
test <- data[-index,]
lm.fit <- glm(sum_orders~., data=train)
summary(lm.fit)
pr.lm <- predict(lm.fit,test)
test$predicted <- pr.lm
test$num <- c(1:nrow(test))
ggplot(test, aes(num)) +
geom_line(aes(y = medv, colour = "var0")) +
geom_line(aes(y = predicted, colour = "var1"))
library(ggplot2)
test$predicted <- pr.lm
test$num <- c(1:nrow(test))
ggplot(test, aes(num)) +
geom_line(aes(y = medv, colour = "var0")) +
geom_line(aes(y = predicted, colour = "var1"))
ggplot(test, aes(num)) +
geom_line(aes(y = sum_orders, colour = "var0")) +
geom_line(aes(y = predicted, colour = "var1"))
options(scipen=999)
test$predicted <- pr.lm
test$num <- c(1:nrow(test))
ggplot(test, aes(num)) +
geom_line(aes(y = sum_orders, colour = "var0")) +
geom_line(aes(y = predicted, colour = "var1"))
?ggplot
ggplot(test, aes(num, ymax = 2000)) +
geom_line(aes(y = sum_orders, colour = "var0")) +
geom_line(aes(y = predicted, colour = "var1"))
ggplot(test, aes(num)) +
geom_line(aes(y = sum_orders, colour = "var0")) +
geom_line(aes(y = predicted, colour = "var1")) + ylim(0, 100000)
MSE.lm <- sum((pr.lm - test$medv)^2)/nrow(test)
MSE.lm
MSE.lm <- sum((pr.lm - test$sum_orders)^2)/nrow(test)
MSE.lm
maxs <- apply(data, 2, max)
mins <- apply(data, 2, min)
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))
maxs <- apply(data, 2, max)
mins <- apply(data, 2, min)
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))
View(data)
train_ <- scaled[index,]
test_ <- scaled[-index,]
library(neuralnet)
n <- names(train_)
index <- sample(1:nrow(data),round(0.75*nrow(data)))
train <- data[index,]
test <- data[-index,]
train_ <- train
test_ <- test
library(neuralnet)
n <- names(train_)
f <- as.formula(paste("sum_orders ~", paste(n[!n %in% "sum_orders"], collapse = " + ")))
nn <- neuralnet(f,data=train_,hidden=c(5,3),linear.output=T)
names(data)
data <- data[,c("competition","search_volume_general","sum_orders")]
maxs <- apply(data, 2, max)
mins <- apply(data, 2, min)
scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))
train_ <- scaled[index,]
test_ <- scaled[-index,]
library(neuralnet)
n <- names(train_)
f <- as.formula(paste("sum_orders ~", paste(n[!n %in% "sum_orders"], collapse = " + ")))
nn <- neuralnet(f,data=train_,hidden=c(5,3),linear.output=T)
nn <- neuralnet(f,data=train_,hidden=c(2,1),linear.output=T)
View(test_)
pr.nn <- compute(nn,test_[,1:2])
pr.nn_ <- pr.nn$net.result*(max(data$sum_orders)-min(data$sum_orders))+min(data$sum_orders)
test.r <- (test_$sum_orders)*(max(data$sum_orders)-min(data$sum_orders))+min(data$sum_orders)
test$predicted_nn <- as.vector(pr.nn_)
ggplot(test, aes(num)) +
geom_line(aes(y = sum_orders, colour = "red")) +
geom_line(aes(y = predicted_nn, colour = "green"))
test$num <- c(1:nrow(test))
ggplot(test, aes(num)) +
geom_line(aes(y = sum_orders, colour = "red")) +
geom_line(aes(y = predicted_nn, colour = "green"))
MSE.nn <- sum((test.r - pr.nn_)^2)/nrow(test_)
MSE.nn
PW=charToRaw("Tiensevest130")
library(mailR)
library(sodium)
library(RCurl)
library(jsonlite)
term = readline("What is the random giph you want?: ")
search = gsub(" ","+",term)
get <- getURL(paste0("http://api.giphy.com/v1/gifs/search?q=",search,"&api_key=dd10de7efda54af299c2e9b1e3b25560&limit=1"))
dat <- fromJSON(get)
dat$data$id
url = paste0("https://media.giphy.com/media/",dat$data$id,"/giphy.gif")
url
download.file(url,'giphy.gif', mode = 'wb')
rhyme <- getURL(paste0("https://api.datamuse.com/words?sl=",search))
rhyme <- fromJSON(rhyme)
rhyme$word
rhyme <- getURL(paste0("https://api.datamuse.com/words?rel_rhy=",search))
rhyme <- fromJSON(rhyme)
rhyme$word
rhyme <- getURL(paste0("https://api.datamuse.com/words?lc=",search))
rhyme <- fromJSON(rhyme)
rhyme$word
html <- read_html("http://toykeeper.net/programs/mad/compliments")
library(rvest)
html <- read_html("http://toykeeper.net/programs/mad/compliments")
text <- html %>%
html_nodes(".blurb_title_1") %>%
html_text()
text
text <- html %>%
html_nodes(".blurb_title_1") %>%
html_text(trim=TRUE)
text
html <- read_html("http://toykeeper.net/programs/mad/compliments")
text <- html %>%
html_nodes(".blurb_title_1") %>%
html_text(trim=TRUE)
text
html <- read_html("http://toykeeper.net/programs/mad/compliments")
text <- html %>%
html_nodes(".blurb_title_1") %>%
html_text(trim=TRUE)
text
send.mail(from = "emeliehofland@gmail.com",
to = c("emelie_hofland@hotmail.com"),
replyTo = c("Reply to someone else <someone.else@gmail.com>"),
subject = term,
body = paste0('<div> <h1>',text,'</h1> </div> <div> <img src="/giphy.gif"> </div>'),
#body = paste0('<img src="https://media.giphy.com/media/E87jjnSCANThe/giphy.gif">'),
html = TRUE,
inline = TRUE,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "emeliehofland@gmail.com", passwd = rawToChar(PW), ssl = TRUE),
authenticate = TRUE,
send = TRUE)
html <- read_html("http://toykeeper.net/programs/mad/compliments")
text <- html %>%
html_nodes(".blurb_title_1") %>%
html_text(trim=TRUE)
text
send.mail(from = "emeliehofland@gmail.com",
to = c("emelie_hofland@hotmail.com"),
replyTo = c("Reply to someone else <someone.else@gmail.com>"),
subject = term,
body = paste0('<div> <h1>',text,'</h1> </div> <div> <img src="/giphy.gif"> </div>'),
#body = paste0('<img src="https://media.giphy.com/media/E87jjnSCANThe/giphy.gif">'),
html = TRUE,
inline = TRUE,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "emeliehofland@gmail.com", passwd = rawToChar(PW), ssl = TRUE),
authenticate = TRUE,
send = TRUE)
PW=charToRaw(readline("Email password needed: "))
x = readlines("Who do you want to send to? (seperate e-mails by ;): ")
x = readline("Who do you want to send to? (seperate e-mails by ;): ")
receivers = as.list(strsplit(x, ";")[[1]])
receivers = trimws(receivers)
rceivers
receivers
trolMail <- function(){
source("D:/Rfiles/trolMail.r")
}
trolMail <- function(){
source("D:/Rfiles/trolMail.r")
}
trolMail()
sender = readline("Please enter your gmail address (sorry - currently only works with gmail): ")
rm(list = ls())
trolMail()
trolMail <- function(){
source("D:/Rfiles/trolMail.r")
}
rm(list=setdiff(ls(), "trolMail"))
trolMail()
trolMail()
trolMail <- function(){
sender = readline("Please enter your gmail address (sorry - currently only works with gmail): ")
PW=charToRaw(readline("Email password needed: "))
term = readline("What is the random giph you want?: ")
search = gsub(" ","+",term)
get <- getURL(paste0("http://api.giphy.com/v1/gifs/search?q=",search,"&api_key=dd10de7efda54af299c2e9b1e3b25560&limit=1"))
dat <- fromJSON(get)
dat$data$id
url = paste0("https://media.giphy.com/media/",dat$data$id,"/giphy.gif")
url
download.file(url,'giphy.gif', mode = 'wb')
html <- read_html("http://toykeeper.net/programs/mad/compliments")
text <- html %>%
html_nodes(".blurb_title_1") %>%
html_text(trim=TRUE)
x = readline("Who do you want to send to? (seperate e-mails by ;): ")
receivers = as.list(strsplit(x, ";")[[1]])
receivers = trimws(receivers)
receivers
print("One moment while we prepare your e-mail...")
send.mail(from = sender,
to = receivers,
replyTo = c("Reply to someone else <someone.else@gmail.com>"),
subject = term,
body = paste0('<div> <h1>',text,'</h1> </div> <div> <img src="/giphy.gif"> </div>'),
html = TRUE,
inline = TRUE,
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name = "emeliehofland@gmail.com", passwd = rawToChar(PW), ssl = TRUE),
authenticate = TRUE,
send = TRUE)
print("Success!")
}
library(roxygen2)
library(devtools)
package.skeleton(name ="trolMail", list = c("trolMail"))
getwd()
document()
setwd("C:/Users/emeli/Documents/trolMail")
document()
document()
build()
install()
library(trolMail)
trolMail()
.rs.askForPassword("foo")
pw = .rs.askForPassword("Please enter your e-mail password: ")
PW=charToRaw(.rs.askForPassword("Please enter your e-mail password: "))
document()
build()
install()
library(trolMail)
trolMail()
document()
library(roxygen2)
library(devtools)
document()
build()
install()
library(trolMail)
trolMail()
document()
build()
install()
library(trolMail)
trolMail()
remove.packages("trolMail")
if (!require(devtools)) {
install.packages('devtools')
}
devtools::install_github('Emelieh21/trolMail')
library(trolMail)
trolMail()
key = Sys.getenv("giphy_key")
key = Sys.getenv("giphy_key")
key = Sys.getenv("giphy_key")
key = Sys.getenv("giphy_key")
library(roxygen2)
library(devtools)
document()
getwd()
setwd("D:/Rfiles/trolMail")
document()
build()
install()
library(trolMail)
trolMail()
